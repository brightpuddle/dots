# Rebind prefix
# set-option -g prefix C-a
# unbind C-a
# bind C-a send-prefix

setw -g mode-keys vi

# mouse behavior
setw -g mouse on
set-option -g mouse on

# neovim told me to do it :)
set focus-events

# scrollback buffer
set-option -g history-limit 3000

# Terminal behavior
set-option -g default-terminal xterm-256color
set-option -sa terminal-overrides ',xterm-256color:RGB'

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 150

# Set window notifications
set -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 1000

# Fix escape delay
set -sg escape-time 10

# Borders
set -g pane-active-border-style bg=default,fg=color7
set -g pane-border-style fg=color7,bg=default

# Image passthrough
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM 

# Status
set -g status on
set -g status-style fg=color7,bg=color8
set -g status-interval 10
set -g status-position top
set -g monitor-activity off
set -g status-justify left

################################################################################
# Key bindings
################################################################################

############################################################
# General
############################################################
bind : command-prompt
bind L clear-history

bind ] next-window
bind [ previous-window


bind r next-layout

bind n new-window

bind c copy-mode
bind v paste-buffer
bind y rotate-window
bind k killp

bind X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'"
bind R source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."


###########################################################
# Windows
############################################################
bind -T root C-w switch-client -T window
bind -T window s split-window -v -c "#{pane_current_path}"
bind -T window S split-window -h -c "#{pane_current_path}"
# smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -T window -n h if-shell "$is_vim" 'send-keys C-w h'  'select-pane -L'
bind -T window -n j if-shell "$is_vim" 'send-keys C-w j'  'select-pane -D'
bind -T window -n k if-shell "$is_vim" 'send-keys C-w k'  'select-pane -U'
bind -T window -n l if-shell "$is_vim" 'send-keys C-w l'  'select-pane -R'

############################################################
# Copy mode
############################################################
# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# Incremental search
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
