###########################################################
# Plugins
############################################################
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-logging'

# Start / stop logging - prefix + shift + p
###########################################################
# Settings
############################################################

# Rebind prefix
set-option -g prefix C-a
unbind C-a
bind C-a send-prefix

# Incremental search
bind-key -T copy-mode-vi / command-prompt -i -p "search down" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "search up" "send -X search-backward-incremental \"%%%\""

# Count windows from 1 instead of 0
set -g base-index 1

# Use vi keybindings for copy mode
setw -g mode-keys vi

# mouse behavior
setw -g mouse on
set-option -g mouse on

# neovim told me to do it :)
set focus-events
set-option -sa terminal-overrides ',xterm-256color:RGB'

# scrollback buffer
set-option -g history-limit 3000

# Terminal behavior
set-option -g default-terminal tmux-256color
# set-option -g default-terminal screen-256color
set -as terminal-features ",xterm-256color:RGB"

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 150

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
set -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 1000

# Fix escape delay
set -sg escape-time 10

# Notifications, search, etc
set -g mode-style "fg=white,bg=brightblack"
set -g message-style "fg=white,bg=brightblack"
set -g message-command-style "fg=white,bg=brightblack"

###########################################################
# Status Bar
############################################################

set -g status on
set -g status-style fg=color251,bg=black
set -g status-interval 10
set -g status-position top
set -g monitor-activity off
set -g status-justify left

set -g pane-active-border-style bg=default,fg=magenta
set -g pane-border-style fg=green

# Center
set-window-option -g window-status-separator ' '
# Active tab
set-window-option -g window-status-current-format "  #[fg=brightblack bg=default]"
set-window-option -ag window-status-current-format "#[fg=#ab7967 bg=brightblack italics]  "
set-window-option -ag window-status-current-format "#[default italics bg=brightblack fg=default] #I:#W "
set-window-option -ag window-status-current-format "#[fg=brightblack bg=black]"

# Inactive tab
set-window-option -g window-status-format "  #[fg=default]    #I:#[default]#W  "


# Left
# set -g status-left-length 200
# Window name
set -g status-left "#[fg=black bg=#2e3440]#[default fg=color244 italics bold] #S"


# Right
# set -g status-right-length 200
# Host
set -g status-right "#[fg=#ab7967] #[fg=default] #H "
set -ag status-right "#[fg=black bg=#2e3440]"

############################################################
# Key bindings
############################################################

# Tmux keys
bind : command-prompt
bind L clear-history

bind ] next-window
bind [ previous-window
bind r next-layout

bind n new-window

bind c copy-mode
bind v paste-buffer
bind y rotate-window
bind k killp
bind X confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'"


bind R source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# Windows
bind -Troot C-w switch-client -Twindow
bind -Twindow s split-window -v -c "#{pane_current_path}"
bind -Twindow S split-window -h -c "#{pane_current_path}"
# bind -Twindow h select-pane -L
# bind -Twindow j select-pane -D
# bind -Twindow k select-pane -U
# bind -Twindow l select-pane -R
# smart pane switching with awareness of vim splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -Twindow -n h if-shell "$is_vim" 'send-keys C-w h'  'select-pane -L'
bind -Twindow -n j if-shell "$is_vim" 'send-keys C-w j'  'select-pane -D'
bind -Twindow -n k if-shell "$is_vim" 'send-keys C-w k'  'select-pane -U'
bind -Twindow -n l if-shell "$is_vim" 'send-keys C-w l'  'select-pane -R'

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

run '~/.config/tmux/plugins/tpm/tpm'
